<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">


<!-- if always-use-default-target is set to false user will be redirected to the previous page they wanted to visit before being prompted to authenticate -->
	<security:http auto-config="true">
		<security:headers>
		</security:headers>
		<security:form-login login-page="/login"
			default-target-url="/" login-processing-url="/perform_login"
			authentication-failure-url="/login"
			authentication-success-forward-url="/login_success" />
		<security:logout logout-success-url="/login"
			logout-url="/perform_logout" />
		<security:csrf disabled="true" />
		<custom-filter after="BASIC_AUTH_FILTER" ref="myFilter" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enable from User where username=?"
				authorities-by-username-query="select username,role from User where username=?" />
		</security:authentication-provider>
	</security:authentication-manager>
	
	<beans:bean id="myFilter" class="com.niit.controller.CustomFilter" />

</beans:beans>